let redValue = 0
let blueValue = 0
let yellowValue = 0
let normalSpeed = 0
let pattern = 0
let currentIndexPattern = 0
let ratioverde = 0
let line_number = 0
let indicePattern = 0
let patternMode = false
let ratiobianco = 0
let ratio = 0
let bufferPattern: number[] = []
let acceso = false
let swap = 0
let value = 0
let speed = 0
function rossoblurosso() {
    brick.showString("rosso blu rosso", 8)
}
function blurossogiallo() {
    brick.showString("blu rosso giallo", 8)
}
sensors.color3.onColorDetected(ColorSensorColor.Green, function () {
    brick.showString("Verde", 5)
    speed = 5
    ratio = ratioverde
})
sensors.color3.onColorDetected(ColorSensorColor.Yellow, function () {
    brick.showString("Giallo", 7)
    if (!(patternMode)) {
        patternMode = true
        speed = 4
        bufferPattern[0] = yellowValue
        currentIndexPattern = currentIndexPattern + 1
    } else {
        if (bufferPattern[currentIndexPattern - 1] != yellowValue && currentIndexPattern < 3) {
            bufferPattern[currentIndexPattern] = yellowValue
            currentIndexPattern = currentIndexPattern + 1
        }
    }
})
sensors.color3.onColorDetected(ColorSensorColor.White, function () {
    brick.showString("Bianco", 5)
    speed = 5
    ratio = ratiobianco
})
brick.buttonDown.onEvent(ButtonEvent.Pressed, function () {
    arrivo()
})
function arrivo() {
    speed = 0
    acceso = false
}
sensors.color3.onColorDetected(ColorSensorColor.Black, function () {
    brick.showString("Nero", 7)
    if (patternMode) {
        indicePattern = 1
        pattern = 0
        for (let value2 of bufferPattern) {
            pattern = pattern + value2 * indicePattern
            indicePattern = indicePattern + 1
        }
        currentIndexPattern = 0
        patternMode = false
        bufferPattern = [0, 0, 0]
        brick.showNumber(pattern, 10)
        if (pattern == 232) {
            blurossogiallo()
        } else {
            if (pattern == 434) {
                rossoblurosso()
            }
        }
    }
    speed = normalSpeed
    ratio = 0
})
brick.buttonUp.onEvent(ButtonEvent.Pressed, function () {
    partenza()
})
function InvertiVerdeBianco() {
    swap = ratiobianco
    ratiobianco = ratioverde
    ratioverde = ratiobianco
}
sensors.color3.onColorDetected(ColorSensorColor.Blue, function () {
    brick.showString("Blu", 7)
    if (!(patternMode)) {
        patternMode = true
        speed = 4
        bufferPattern[0] = blueValue
        currentIndexPattern = currentIndexPattern + 1
    } else {
        if (bufferPattern[currentIndexPattern - 1] != blueValue && currentIndexPattern < 3) {
            bufferPattern[currentIndexPattern] = blueValue
            currentIndexPattern = currentIndexPattern + 1
        }
    }
})
function partenza() {
    speed = 10
    ratio = 0
    acceso = true
}
sensors.infrared1.onEvent(InfraredSensorEvent.ObjectNear, function () {
    speed = 0
    acceso = false
})
sensors.color3.onColorDetected(ColorSensorColor.Red, function () {
    brick.showString("Rosso", 7)
    if (!(patternMode)) {
        patternMode = true
        speed = 4
        bufferPattern[0] = redValue
        currentIndexPattern = currentIndexPattern + 1
    } else {
        if (bufferPattern[currentIndexPattern - 1] != redValue && currentIndexPattern < 3) {
            bufferPattern[currentIndexPattern] = redValue
            currentIndexPattern = currentIndexPattern + 1
        }
    }
})
value = 0
bufferPattern = [0, 0, 0]
patternMode = false
currentIndexPattern = 0
normalSpeed = 15
speed = 0
ratio = 0
ratiobianco = 100
ratioverde = -100
yellowValue = 5
redValue = 97
blueValue = 23
forever(function () {
    motors.largeBC.steer(ratio, speed)
    if (acceso == true) {
        
    }
    line_number = 1
    for (let value3 of bufferPattern) {
        brick.showNumber(value3, line_number)
        line_number = line_number + 1
    }
    line_number = 1
})
